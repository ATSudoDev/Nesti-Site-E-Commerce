{% extends "base.html.twig" %}

{% block content %}

	<div id="account">
		<div id="logging">
			{% if session.logged_in == true %}

				<div id="account-inscription">
					<div id="connection-title">
						Bonjour
					</div>

					<div id="user-data">
						{{session.lastname}}
						{{session.firstname}}
					</div>
					<a href = "{{ base_url('/user/disconnect')}}">
					<button type="submit" id="btn-disconnection">Déconnexion</button>
					</a>
				</div>


			{% else %}

				<div id="account-inscription">
					<div id="connection-title">
						Connexion
					</div>

					<form id="form-connection-user">
						<div id="connection-form-input">
							<div class="form-group">
								<label for="connection-username">Nom d'utilisateur</label>
								<input type="text" class="form-control" id="connection-username" name="connection-username">
								<span class="text-danger" id="errorConnectionUsername">{{validation.getErrors()["connection-username"]}}</span>
							</div>
							<div class="form-group">
								<label for="connection-password">Mot de passe</label>
								<input type="password" class="form-control" id="connection-password" name="connection-password">
								<span class="text-danger" id="errorConnectionPassword">{{validation.getErrors()["connection-password"]}}</span>
							</div>
						</div>
					</form>
					<button type="submit" id="btn-connection">Connexion</button>

				</div>


			{% endif %}
		</div>

		<div>
			<div class="alert alert-success" id="alert-register" onclick="hideAlert(this)" hidden>L'utilisateur a bien été enregistré</div>

			<div id="account-register">
				<div id="register-title">
					Inscription
				</div>

				{{ form_open('',{id :"form-register-user"})}}
				<div id="register-form-input">
					<div id="register-form-left">
						<div>
							<div class="form-group">
								<label for="register-lastname">Nom</label>
								<input type="text" class="form-control" id="register-lastname" name="lastname">
								<span class="text-danger" id="errorRegisterLastname">{{validation.getErrors()["lastname"]}}</span>
							</div>
							<div class="form-group">
								<label for="register-firstname">Prénom</label>
								<input type="text" class="form-control" id="register-firstname" name="firstname">
								<span class="text-danger" id="errorRegisterFirstname">{{validation.getErrors()["firstname"]}}</span>
							</div>
							<div class="form-group">
								<label for="register-username">Nom d'utilisateur</label>
								<input type="text" class="form-control" id="register-username" name="username">
								<span class="text-danger" id="errorRegisterUsername">{{validation.getErrors()["username"]}}</span>
							</div>
							<div class="form-group">
								<label for="register-email">Email</label>
								<input type="email" class="form-control" id="register-email" name="email">
								<span class="text-danger" id="errorRegisterEmail">{{validation.getErrors()["email"]}}</span>
							</div>
							<div class="form-group">
								<label for="register-password">Mot de passe</label>
								<input type="text" class="form-control" id="register-password" name="password">
								<progress id="pwd-strength" value="0" max="5"></progress>
							<span class="text-danger" id="errorRegisterPassword">{{validation.getErrors()["password"]}}</span>
						</div>
					</div>
				</div>

				<div id="register-form-right">
					<div class="form-group">
						<label for="register-address1">Adresse</label>
						<input type="text" class="form-control" id="register-address1" name="address1">
						<span class="text-danger" id="errorRegisterAddress1">{{validation.getErrors()["address1"]}}</span>
					</div>
					<div class="form-group">
						<label for="register-address2">Complément d'adresse</label>
						<input type="text" class="form-control" id="register-address2" name="address2">
						<span class="text-danger" id="errorRegisterAddress2">{{validation.getErrors()["address2"]}}</span>
					</div>
					<div class="form-group">
						<label for="register-city">Ville</label>
						<input type="text" class="form-control" id="register-city" name="city">
						<span class="text-danger" id="errorRegisterCity">{{validation.getErrors()["city"]}}</span>
					</div>
					<div class="form-group">
						<label for="register-postcode">Code postal</label>
						<input type="text" class="form-control" id="register-postcode" name="postcode">
						<span class="text-danger" id="errorRegisterPostcode">{{validation.getErrors()["postcode"]}}</span>
					</div>
					<div id="password-verification">
						<div class="font-weight-bold">Votre mot de passe doit contenir :
						</div>
						<div id='password-conditions'>
							<div id='pwd-length'>
								• Au moins 12 caractères</div>
							<div id='pwd-low-case'>
								• Une minuscule</div>
							<div id='pwd-upper-case'>
								• Une majuscule</div>
							<div id='pwd-digit'>
								• Un chiffre</div>
							<div id='pwd-special'>
								• Un caractère spécial</div>
						</div>
					</div>
				</div>
				{{ form_close() }}
			</div>
			<button type="submit" id="btn-register">S'inscrire</button>
		</div>
	</div>
{% endblock %}

{% block script %}
<script>

	// PASSWORD STRENGHT

let pwInput = document.getElementById("register-password");

if (pwInput.value != '') {
document.getElementById("pwd-strength").value = passwordStrength(pwInput.value);
}

pwInput.addEventListener('keyup', function () {
document.getElementById("pwd-strength").value = passwordStrength(pwInput.value);
});

// Checks conditions password
function passwordStrength(pw) {

changeColorConditions(pw);

return(/.{12,}/.test(pw) + /* at least 12 characters */
/[a-z]/.test(pw) + /* a lower letter */
/[A-Z]/.test(pw) + /* a upper letter */
/\d/.test(pw) + /* a digit */
/[^A-Za-z0-9]/.test(pw) /* a special character */
)
}

// Changes the color of the conditions depending of the input password
function changeColorConditions(pw) {

if (/.{12,}/.test(pw) == true) {
document.getElementById("pwd-length").style.color = '#F0F7EE'
} else {
document.getElementById("pwd-length").style.color = '#F58F29'
}


if (/[a-z]/.test(pw) == true) {
document.getElementById("pwd-low-case").style.color = '#F0F7EE'
} else {
document.getElementById("pwd-low-case").style.color = '#F58F29'
}


if (/[A-Z]/.test(pw) == true) {
document.getElementById("pwd-upper-case").style.color = '#F0F7EE'
} else {
document.getElementById("pwd-upper-case").style.color = '#F58F29'
}


if (/\d/.test(pw) == true) {
document.getElementById("pwd-digit").style.color = '#F0F7EE'
} else {
document.getElementById("pwd-digit").style.color = '#F58F29'
}


if (/[^A-Za-z0-9]/.test(pw) == true) {
document.getElementById("pwd-special").style.color = '#F0F7EE'
} else {
document.getElementById("pwd-special").style.color = '#F58F29'
}
}

// AJAX SEND FORM CONNECTION

const csrf = document.querySelector('input[name="csrf_nesti"]');

buttonConnection = document.querySelector("#btn-connection");

buttonConnection.addEventListener('click', (function (e) {

formConnection = document.querySelector("#form-connection-user");

event.preventDefault();

connectUser(formConnection).then((response) => {
if (response) {

if (response.success && response.csrf_token) {

logging = document.querySelector("#logging");
logging.innerHTML = '';


var divGeneral = document.createElement("div");
divGeneral.id = "account-inscription";

var divTitle = document.createElement("div");
divTitle.id = "connection-title"; 
divTitle.innerHTML = "Bonjour";

var divUserData = document.createElement("div");
divUserData.id = "user-data"; 
divUserData.innerHTML = response.lastname + ' ' +  response.firstname;

var link = document.createElement("a");
link.setAttribute('href', "{{ base_url('/user/disconnect')}}");

var buttonDisconnection = document.createElement("button");
buttonDisconnection.id = "btn-disconnection";
buttonDisconnection.innerHTML = "Déconnexion";

divGeneral.appendChild(divTitle);
divGeneral.appendChild(divUserData);
link.appendChild(buttonDisconnection);
divGeneral.appendChild(link);
logging.appendChild(divGeneral);

} else {

document.querySelector("#errorConnectionUsername").innerHTML = response.validation['connection-username'] || response.error_username;
document.querySelector("#errorConnectionPassword").innerHTML = response.validation['connection-password'] || response.error_password;

}

// Refresh CSRF
csrf.setAttribute('value', response.csrf_token);

}
});

}));

/**
		* Ajax request to connect a user
		* @param obj form
		* @returns mixed
		*/
async function connectUser(obj) {

var myHeaders = new Headers();

let formData = new FormData(obj);
formData.append(csrf.name, csrf.value);

var myInit = {
method: 'POST',
headers: myHeaders,
mode: 'cors',
cache: 'default',
body: formData
};

let response = await fetch('{{ base_url() }}/user/connection', myInit);
try {
if (response.ok) {
return await response.json();
} else {
return false;
}
} catch (e) {
console.error(e.message);
}
};

// AJAX SEND FORM REGISTER

buttonRegister = document.querySelector("#btn-register");

buttonRegister.addEventListener('click', (function (e) {

formRegister = document.querySelector("#form-register-user");

event.preventDefault();

addUser(formRegister).then((response) => {
if (response) {
if (response.success && response.csrf_token) {

alertRegister = document.querySelector("#alert-register");
alertRegister.removeAttribute("hidden");

document.querySelector("#register-lastname").value = "";
document.querySelector("#register-firstname").value = "";
document.querySelector("#register-username").value = "";
document.querySelector("#register-email").value = "";
document.querySelector("#register-password").value = "";
document.querySelector("#register-address1").value = "";
document.querySelector("#register-address2").value = "";
document.querySelector("#register-city").value = "";
document.querySelector("#register-postcode").value = "";

document.querySelector("#errorRegisterLastname").innerHTML = "";
document.querySelector("#errorRegisterFirstname").innerHTML = "";
document.querySelector("#errorRegisterEmail").innerHTML = "";
document.querySelector("#errorRegisterUsername").innerHTML = "";
document.querySelector("#errorRegisterPassword").innerHTML = "";
document.querySelector("#errorRegisterAddress1").innerHTML = "";
document.querySelector("#errorRegisterAddress2").innerHTML = "";
document.querySelector("#errorRegisterCity").innerHTML = "";
document.querySelector("#errorRegisterPostcode").innerHTML = "";

} else {
document.querySelector("#errorRegisterLastname").innerHTML = response.validation['lastname'] || "";
document.querySelector("#errorRegisterFirstname").innerHTML = response.validation['firstname'] || "";
document.querySelector("#errorRegisterEmail").innerHTML = response.validation['email'] || "";
document.querySelector("#errorRegisterUsername").innerHTML = response.validation['username'] || "";
document.querySelector("#errorRegisterPassword").innerHTML = response.validation['password'] || "";
document.querySelector("#errorRegisterAddress1").innerHTML = response.validation['address1'] || "";
document.querySelector("#errorRegisterAddress2").innerHTML = response.validation['address2'] || "";
document.querySelector("#errorRegisterCity").innerHTML = response.validation['city'] || "";
document.querySelector("#errorRegisterPostcode").innerHTML = response.validation['postcode'] || "";
}

// Refresh CSRF
csrf.setAttribute('value', response.csrf_token);
}
});

}))


/**
		* Ajax request to add a user
		* @param obj form
		* @returns mixed
		*/
async function addUser(obj) {

var myHeaders = new Headers();

let formData = new FormData(obj);;

var myInit = {
method: 'POST',
headers: myHeaders,
mode: 'cors',
cache: 'default',
body: formData
};

let response = await fetch('{{ base_url() }}/user/register', myInit);
try {
if (response.ok) {
return await response.json();
} else {
return false;
}
} catch (e) {
console.error(e.message);
}
};

function hideAlert(el) {
var alert = el;
alert.setAttribute("hidden", "");
};


</script>

{% endblock %}
